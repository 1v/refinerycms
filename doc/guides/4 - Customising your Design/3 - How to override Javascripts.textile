h2. How to add custom JavaScript files

Refinery by default will provide you with the required javascript files you need.  Sometimes you want to provide your own files and this guide will show you how to:

*Change the default javascript libraries included.
*Add your own files to be included on a per page basis.

endprologue.

h3. 1 Overriding the JavaScript libraries

Refinery uses jQuery by default, but if you would like to override the javascript library to dojo to your home page you can add this to home.html.erb (or any other view):

TIP: If you want to load dojo, or any other framework site wide, it is best to edit that within your <tt>layouts/application.html.erb</tt>

<shell>
<% content_for :javascript_libraries, javascript_include_tag('https://ajax.googleapis.com/ajax/libs/dojo/1.6.1/dojo/dojo.xd.js') %>
</shell>

h3. 2 Including your own JavasScript files

If you want to include your own javascript files you'll need to simply include this in your home.html.erb:

<shell>
<% content_for :javascripts do %>
  <% javascript_include_tag('jquery.cycle.all.js', 'jquery.super_awesome.plugin.js', 'more.js') %>
<% end %>
</shell>

This will add the javascript files that you included on your home page. If you want to override the files for other pages you can override show.html.erb and include or exclude any files you desire.

h3. 3 Different ways to change files
Refinery provides you with four unique ways of adding JavaScript files, two we have already seen. 

<shell>
<% content_for :before_javascript_libraries, javascript_include_tag('init.js') %>
<% content_for :javascript_libraries, jquery_include_tags(:jquery_ui => false) %>
<% content_for :after_javascript_libraries, javascript_include_tag('jquery.cycle.all.js') %>
<% content_for :javascripts do %>
  <% javascript_include_tag('jquery.cycle.all.js', 'jquery.super_awesome.plugin.js', 'more.js') %>
<% end %>
</shell>

What they do:
*<tt>before_javascript_libraries</tt> will include a file before any libraries have been loaded.  
*<tt>javascript_libraries</tt> will load any javascript libraries we want to include.  
*<tt>after_javascript_libraries</tt> will load any files you wish to include directly below your libraries, and finally we have the 
*<tt>javascripts</tt> do block that we have seen that will load all the files we are using for our project. 

TIP. You can change the files that are loaded on a per page basis by simply overriding the corresponding views to include only what you need. 
